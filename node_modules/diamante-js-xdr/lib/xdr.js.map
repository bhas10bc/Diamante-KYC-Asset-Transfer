{"version":3,"file":"xdr.js","mappings":"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","sources":["webpack://XDR/webpack/universalModuleDefinition","webpack://XDR/./src/array.js","webpack://XDR/./src/bigint-encoder.js","webpack://XDR/./src/bool.js","webpack://XDR/./src/browser.js","webpack://XDR/./src/config.js","webpack://XDR/./src/double.js","webpack://XDR/./src/enum.js","webpack://XDR/./src/errors.js","webpack://XDR/./src/float.js","webpack://XDR/./src/hyper.js","webpack://XDR/./src/index.js","webpack://XDR/./src/int.js","webpack://XDR/./src/large-int.js","webpack://XDR/./src/opaque.js","webpack://XDR/./src/option.js","webpack://XDR/./src/quadruple.js","webpack://XDR/./src/reference.js","webpack://XDR/./src/serialization/xdr-reader.js","webpack://XDR/./src/serialization/xdr-writer.js","webpack://XDR/./src/string.js","webpack://XDR/./src/struct.js","webpack://XDR/./src/types.js","webpack://XDR/./src/union.js","webpack://XDR/./src/unsigned-hyper.js","webpack://XDR/./src/unsigned-int.js","webpack://XDR/./src/var-array.js","webpack://XDR/./src/var-opaque.js","webpack://XDR/./src/void.js","webpack://XDR/./src/xdr-type.js","webpack://XDR/webpack/bootstrap","webpack://XDR/webpack/runtime/define property getters","webpack://XDR/webpack/runtime/hasOwnProperty shorthand","webpack://XDR/webpack/runtime/make namespace object","webpack://XDR/webpack/before-startup","webpack://XDR/webpack/startup","webpack://XDR/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"XDR\"] = factory();\n\telse\n\t\troot[\"XDR\"] = factory();\n})(this, () => {\nreturn ","import { XdrCompositeType } from './xdr-type';\r\nimport { XdrWriterError } from './errors';\r\n\r\nexport class Array extends XdrCompositeType {\r\n  constructor(childType, length) {\r\n    super();\r\n    this._childType = childType;\r\n    this._length = length;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  read(reader) {\r\n    // allocate array of specified length\r\n    const result = new global.Array(this._length);\r\n    // read values\r\n    for (let i = 0; i < this._length; i++) {\r\n      result[i] = this._childType.read(reader);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  write(value, writer) {\r\n    if (!(value instanceof global.Array))\r\n      throw new XdrWriterError(`value is not array`);\r\n\r\n    if (value.length !== this._length)\r\n      throw new XdrWriterError(\r\n        `got array of size ${value.length}, expected ${this._length}`\r\n      );\r\n\r\n    for (const child of value) {\r\n      this._childType.write(child, writer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  isValid(value) {\r\n    if (!(value instanceof global.Array) || value.length !== this._length) {\r\n      return false;\r\n    }\r\n\r\n    for (const child of value) {\r\n      if (!this._childType.isValid(child)) return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","/**\r\n * Encode a native `bigint` value from a list of arbitrary integer-like values.\r\n *\r\n * @param {Array<number|bigint|string>} parts - Slices to encode in big-endian\r\n *    format (i.e. earlier elements are higher bits)\r\n * @param {64|128|256} size - Number of bits in the target integer type\r\n * @param {boolean} unsigned - Whether it's an unsigned integer\r\n *\r\n * @returns {bigint}\r\n */\r\nexport function encodeBigIntFromBits(parts, size, unsigned) {\r\n  if (!(parts instanceof Array)) {\r\n    // allow a single parameter instead of an array\r\n    parts = [parts];\r\n  } else if (parts.length && parts[0] instanceof Array) {\r\n    // unpack nested array param\r\n    parts = parts[0];\r\n  }\r\n\r\n  const total = parts.length;\r\n  const sliceSize = size / total;\r\n  switch (sliceSize) {\r\n    case 32:\r\n    case 64:\r\n    case 128:\r\n    case 256:\r\n      break;\r\n\r\n    default:\r\n      throw new RangeError(\r\n        `expected slices to fit in 32/64/128/256 bits, got ${parts}`\r\n      );\r\n  }\r\n\r\n  // normalize all inputs to bigint\r\n  try {\r\n    for (let i = 0; i < parts.length; i++) {\r\n      if (typeof parts[i] !== 'bigint') {\r\n        parts[i] = BigInt(parts[i].valueOf());\r\n      }\r\n    }\r\n  } catch (e) {\r\n    throw new TypeError(`expected bigint-like values, got: ${parts} (${e})`);\r\n  }\r\n\r\n  // check for sign mismatches for single inputs (this is a special case to\r\n  // handle one parameter passed to e.g. UnsignedHyper et al.)\r\n  // see https://github.com/diamcircle/js-xdr/pull/100#discussion_r1228770845\r\n  if (unsigned && parts.length === 1 && parts[0] < 0n) {\r\n    throw new RangeError(`expected a positive value, got: ${parts}`);\r\n  }\r\n\r\n  // encode in big-endian fashion, shifting each slice by the slice size\r\n  let result = BigInt.asUintN(sliceSize, parts[0]); // safe: len >= 1\r\n  for (let i = 1; i < parts.length; i++) {\r\n    result |= BigInt.asUintN(sliceSize, parts[i]) << BigInt(i * sliceSize);\r\n  }\r\n\r\n  // interpret value as signed if necessary and clamp it\r\n  if (!unsigned) {\r\n    result = BigInt.asIntN(size, result);\r\n  }\r\n\r\n  // check boundaries\r\n  const [min, max] = calculateBigIntBoundaries(size, unsigned);\r\n  if (result >= min && result <= max) {\r\n    return result;\r\n  }\r\n\r\n  // failed to encode\r\n  throw new TypeError(\r\n    `bigint values [${parts}] for ${formatIntName(\r\n      size,\r\n      unsigned\r\n    )} out of range [${min}, ${max}]: ${result}`\r\n  );\r\n}\r\n\r\n/**\r\n * Transforms a single bigint value that's supposed to represent a `size`-bit\r\n * integer into a list of `sliceSize`d chunks.\r\n *\r\n * @param {bigint} value - Single bigint value to decompose\r\n * @param {64|128|256} iSize - Number of bits represented by `value`\r\n * @param {32|64|128} sliceSize - Number of chunks to decompose into\r\n * @return {bigint[]}\r\n */\r\nexport function sliceBigInt(value, iSize, sliceSize) {\r\n  if (typeof value !== 'bigint') {\r\n    throw new TypeError(`Expected bigint 'value', got ${typeof value}`);\r\n  }\r\n\r\n  const total = iSize / sliceSize;\r\n  if (total === 1) {\r\n    return [value];\r\n  }\r\n\r\n  if (\r\n    sliceSize < 32 ||\r\n    sliceSize > 128 ||\r\n    (total !== 2 && total !== 4 && total !== 8)\r\n  ) {\r\n    throw new TypeError(\r\n      `invalid bigint (${value}) and slice size (${iSize} -> ${sliceSize}) combination`\r\n    );\r\n  }\r\n\r\n  const shift = BigInt(sliceSize);\r\n\r\n  // iterate shift and mask application\r\n  const result = new Array(total);\r\n  for (let i = 0; i < total; i++) {\r\n    // we force a signed interpretation to preserve sign in each slice value,\r\n    // but downstream can convert to unsigned if it's appropriate\r\n    result[i] = BigInt.asIntN(sliceSize, value); // clamps to size\r\n\r\n    // move on to the next chunk\r\n    value >>= shift;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function formatIntName(precision, unsigned) {\r\n  return `${unsigned ? 'u' : 'i'}${precision}`;\r\n}\r\n\r\n/**\r\n * Get min|max boundaries for an integer with a specified bits size\r\n * @param {64|128|256} size - Number of bits in the source integer type\r\n * @param {Boolean} unsigned - Whether it's an unsigned integer\r\n * @return {BigInt[]}\r\n */\r\nexport function calculateBigIntBoundaries(size, unsigned) {\r\n  if (unsigned) {\r\n    return [0n, (1n << BigInt(size)) - 1n];\r\n  }\r\n\r\n  const boundary = 1n << BigInt(size - 1);\r\n  return [0n - boundary, boundary - 1n];\r\n}\r\n","import { Int } from './int';\r\nimport { XdrPrimitiveType } from './xdr-type';\r\nimport { XdrReaderError } from './errors';\r\n\r\nexport class Bool extends XdrPrimitiveType {\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static read(reader) {\r\n    const value = Int.read(reader);\r\n\r\n    switch (value) {\r\n      case 0:\r\n        return false;\r\n      case 1:\r\n        return true;\r\n      default:\r\n        throw new XdrReaderError(`got ${value} when trying to read a bool`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static write(value, writer) {\r\n    const intVal = value ? 1 : 0;\r\n    Int.write(intVal, writer);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static isValid(value) {\r\n    return typeof value === 'boolean';\r\n  }\r\n}\r\n","// eslint-disable-next-line prefer-import/prefer-import-over-require\r\nconst exports = require('./index');\r\nmodule.exports = exports;\r\n","// eslint-disable-next-line max-classes-per-file\r\nimport * as XDRTypes from './types';\r\nimport { Reference } from './reference';\r\nimport { XdrDefinitionError } from './errors';\r\n\r\nexport * from './reference';\r\n\r\nclass SimpleReference extends Reference {\r\n  constructor(name) {\r\n    super();\r\n    this.name = name;\r\n  }\r\n\r\n  resolve(context) {\r\n    const defn = context.definitions[this.name];\r\n    return defn.resolve(context);\r\n  }\r\n}\r\n\r\nclass ArrayReference extends Reference {\r\n  constructor(childReference, length, variable = false) {\r\n    super();\r\n    this.childReference = childReference;\r\n    this.length = length;\r\n    this.variable = variable;\r\n  }\r\n\r\n  resolve(context) {\r\n    let resolvedChild = this.childReference;\r\n    let length = this.length;\r\n\r\n    if (resolvedChild instanceof Reference) {\r\n      resolvedChild = resolvedChild.resolve(context);\r\n    }\r\n\r\n    if (length instanceof Reference) {\r\n      length = length.resolve(context);\r\n    }\r\n\r\n    if (this.variable) {\r\n      return new XDRTypes.VarArray(resolvedChild, length);\r\n    }\r\n    return new XDRTypes.Array(resolvedChild, length);\r\n  }\r\n}\r\n\r\nclass OptionReference extends Reference {\r\n  constructor(childReference) {\r\n    super();\r\n    this.childReference = childReference;\r\n    this.name = childReference.name;\r\n  }\r\n\r\n  resolve(context) {\r\n    let resolvedChild = this.childReference;\r\n\r\n    if (resolvedChild instanceof Reference) {\r\n      resolvedChild = resolvedChild.resolve(context);\r\n    }\r\n\r\n    return new XDRTypes.Option(resolvedChild);\r\n  }\r\n}\r\n\r\nclass SizedReference extends Reference {\r\n  constructor(sizedType, length) {\r\n    super();\r\n    this.sizedType = sizedType;\r\n    this.length = length;\r\n  }\r\n\r\n  resolve(context) {\r\n    let length = this.length;\r\n\r\n    if (length instanceof Reference) {\r\n      length = length.resolve(context);\r\n    }\r\n\r\n    return new this.sizedType(length);\r\n  }\r\n}\r\n\r\nclass Definition {\r\n  constructor(constructor, name, cfg) {\r\n    this.constructor = constructor;\r\n    this.name = name;\r\n    this.config = cfg;\r\n  }\r\n\r\n  // resolve calls the constructor of this definition with the provided context\r\n  // and this definitions config values.  The definitions constructor should\r\n  // populate the final type on `context.results`, and may refer to other\r\n  // definitions through `context.definitions`\r\n  resolve(context) {\r\n    if (this.name in context.results) {\r\n      return context.results[this.name];\r\n    }\r\n\r\n    return this.constructor(context, this.name, this.config);\r\n  }\r\n}\r\n\r\n// let the reference resolution system do its thing\r\n// the \"constructor\" for a typedef just returns the resolved value\r\nfunction createTypedef(context, typeName, value) {\r\n  if (value instanceof Reference) {\r\n    value = value.resolve(context);\r\n  }\r\n  context.results[typeName] = value;\r\n  return value;\r\n}\r\n\r\nfunction createConst(context, name, value) {\r\n  context.results[name] = value;\r\n  return value;\r\n}\r\n\r\nclass TypeBuilder {\r\n  constructor(destination) {\r\n    this._destination = destination;\r\n    this._definitions = {};\r\n  }\r\n\r\n  enum(name, members) {\r\n    const result = new Definition(XDRTypes.Enum.create, name, members);\r\n    this.define(name, result);\r\n  }\r\n\r\n  struct(name, members) {\r\n    const result = new Definition(XDRTypes.Struct.create, name, members);\r\n    this.define(name, result);\r\n  }\r\n\r\n  union(name, cfg) {\r\n    const result = new Definition(XDRTypes.Union.create, name, cfg);\r\n    this.define(name, result);\r\n  }\r\n\r\n  typedef(name, cfg) {\r\n    const result = new Definition(createTypedef, name, cfg);\r\n    this.define(name, result);\r\n  }\r\n\r\n  const(name, cfg) {\r\n    const result = new Definition(createConst, name, cfg);\r\n    this.define(name, result);\r\n  }\r\n\r\n  void() {\r\n    return XDRTypes.Void;\r\n  }\r\n\r\n  bool() {\r\n    return XDRTypes.Bool;\r\n  }\r\n\r\n  int() {\r\n    return XDRTypes.Int;\r\n  }\r\n\r\n  hyper() {\r\n    return XDRTypes.Hyper;\r\n  }\r\n\r\n  uint() {\r\n    return XDRTypes.UnsignedInt;\r\n  }\r\n\r\n  uhyper() {\r\n    return XDRTypes.UnsignedHyper;\r\n  }\r\n\r\n  float() {\r\n    return XDRTypes.Float;\r\n  }\r\n\r\n  double() {\r\n    return XDRTypes.Double;\r\n  }\r\n\r\n  quadruple() {\r\n    return XDRTypes.Quadruple;\r\n  }\r\n\r\n  string(length) {\r\n    return new SizedReference(XDRTypes.String, length);\r\n  }\r\n\r\n  opaque(length) {\r\n    return new SizedReference(XDRTypes.Opaque, length);\r\n  }\r\n\r\n  varOpaque(length) {\r\n    return new SizedReference(XDRTypes.VarOpaque, length);\r\n  }\r\n\r\n  array(childType, length) {\r\n    return new ArrayReference(childType, length);\r\n  }\r\n\r\n  varArray(childType, maxLength) {\r\n    return new ArrayReference(childType, maxLength, true);\r\n  }\r\n\r\n  option(childType) {\r\n    return new OptionReference(childType);\r\n  }\r\n\r\n  define(name, definition) {\r\n    if (this._destination[name] === undefined) {\r\n      this._definitions[name] = definition;\r\n    } else {\r\n      throw new XdrDefinitionError(`${name} is already defined`);\r\n    }\r\n  }\r\n\r\n  lookup(name) {\r\n    return new SimpleReference(name);\r\n  }\r\n\r\n  resolve() {\r\n    for (const defn of Object.values(this._definitions)) {\r\n      defn.resolve({\r\n        definitions: this._definitions,\r\n        results: this._destination\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport function config(fn, types = {}) {\r\n  if (fn) {\r\n    const builder = new TypeBuilder(types);\r\n    fn(builder);\r\n    builder.resolve();\r\n  }\r\n\r\n  return types;\r\n}\r\n","import { XdrPrimitiveType } from './xdr-type';\r\nimport { XdrWriterError } from './errors';\r\n\r\nexport class Double extends XdrPrimitiveType {\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static read(reader) {\r\n    return reader.readDoubleBE();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static write(value, writer) {\r\n    if (typeof value !== 'number') throw new XdrWriterError('not a number');\r\n\r\n    writer.writeDoubleBE(value);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static isValid(value) {\r\n    return typeof value === 'number';\r\n  }\r\n}\r\n","import { Int } from './int';\r\nimport { XdrPrimitiveType } from './xdr-type';\r\nimport { XdrReaderError, XdrWriterError } from './errors';\r\n\r\nexport class Enum extends XdrPrimitiveType {\r\n  constructor(name, value) {\r\n    super();\r\n    this.name = name;\r\n    this.value = value;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static read(reader) {\r\n    const intVal = Int.read(reader);\r\n    const res = this._byValue[intVal];\r\n    if (res === undefined)\r\n      throw new XdrReaderError(\r\n        `unknown ${this.enumName} member for value ${intVal}`\r\n      );\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static write(value, writer) {\r\n    if (!(value instanceof this))\r\n      throw new XdrWriterError(`unknown ${value} is not a ${this.enumName}`);\r\n\r\n    Int.write(value.value, writer);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static isValid(value) {\r\n    return value instanceof this;\r\n  }\r\n\r\n  static members() {\r\n    return this._members;\r\n  }\r\n\r\n  static values() {\r\n    return Object.values(this._members);\r\n  }\r\n\r\n  static fromName(name) {\r\n    const result = this._members[name];\r\n\r\n    if (!result)\r\n      throw new TypeError(`${name} is not a member of ${this.enumName}`);\r\n\r\n    return result;\r\n  }\r\n\r\n  static fromValue(value) {\r\n    const result = this._byValue[value];\r\n    if (result === undefined)\r\n      throw new TypeError(\r\n        `${value} is not a value of any member of ${this.enumName}`\r\n      );\r\n    return result;\r\n  }\r\n\r\n  static create(context, name, members) {\r\n    const ChildEnum = class extends Enum {};\r\n\r\n    ChildEnum.enumName = name;\r\n    context.results[name] = ChildEnum;\r\n\r\n    ChildEnum._members = {};\r\n    ChildEnum._byValue = {};\r\n\r\n    for (const [key, value] of Object.entries(members)) {\r\n      const inst = new ChildEnum(key, value);\r\n      ChildEnum._members[key] = inst;\r\n      ChildEnum._byValue[value] = inst;\r\n      ChildEnum[key] = () => inst;\r\n    }\r\n\r\n    return ChildEnum;\r\n  }\r\n}\r\n","export class XdrWriterError extends TypeError {\r\n  constructor(message) {\r\n    super(`XDR Write Error: ${message}`);\r\n  }\r\n}\r\n\r\nexport class XdrReaderError extends TypeError {\r\n  constructor(message) {\r\n    super(`XDR Read Error: ${message}`);\r\n  }\r\n}\r\n\r\nexport class XdrDefinitionError extends TypeError {\r\n  constructor(message) {\r\n    super(`XDR Type Definition Error: ${message}`);\r\n  }\r\n}\r\n\r\nexport class XdrNotImplementedDefinitionError extends XdrDefinitionError {\r\n  constructor() {\r\n    super(\r\n      `method not implemented, it should be overloaded in the descendant class.`\r\n    );\r\n  }\r\n}\r\n","import { XdrPrimitiveType } from './xdr-type';\r\nimport { XdrWriterError } from './errors';\r\n\r\nexport class Float extends XdrPrimitiveType {\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static read(reader) {\r\n    return reader.readFloatBE();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static write(value, writer) {\r\n    if (typeof value !== 'number') throw new XdrWriterError('not a number');\r\n\r\n    writer.writeFloatBE(value);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static isValid(value) {\r\n    return typeof value === 'number';\r\n  }\r\n}\r\n","import { LargeInt } from './large-int';\r\n\r\nexport class Hyper extends LargeInt {\r\n  /**\r\n   * @param {Array<Number|BigInt|String>} parts - Slices to encode\r\n   */\r\n  constructor(...args) {\r\n    super(args);\r\n  }\r\n\r\n  get low() {\r\n    return Number(this._value & 0xffffffffn) << 0;\r\n  }\r\n\r\n  get high() {\r\n    return Number(this._value >> 32n) >> 0;\r\n  }\r\n\r\n  get size() {\r\n    return 64;\r\n  }\r\n\r\n  get unsigned() {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Create Hyper instance from two [high][low] i32 values\r\n   * @param {Number} low - Low part of i64 number\r\n   * @param {Number} high - High part of i64 number\r\n   * @return {LargeInt}\r\n   */\r\n  static fromBits(low, high) {\r\n    return new this(low, high);\r\n  }\r\n}\r\n\r\nHyper.defineIntBoundaries();\r\n","export * from './types';\r\nexport * from './config';\r\n\r\nexport { XdrReader } from './serialization/xdr-reader';\r\nexport { XdrWriter } from './serialization/xdr-writer';\r\n","import { XdrPrimitiveType } from './xdr-type';\r\nimport { XdrWriterError } from './errors';\r\n\r\nconst MAX_VALUE = 2147483647;\r\nconst MIN_VALUE = -2147483648;\r\n\r\nexport class Int extends XdrPrimitiveType {\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static read(reader) {\r\n    return reader.readInt32BE();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static write(value, writer) {\r\n    if (typeof value !== 'number') throw new XdrWriterError('not a number');\r\n\r\n    if ((value | 0) !== value) throw new XdrWriterError('invalid i32 value');\r\n\r\n    writer.writeInt32BE(value);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static isValid(value) {\r\n    if (typeof value !== 'number' || (value | 0) !== value) {\r\n      return false;\r\n    }\r\n\r\n    return value >= MIN_VALUE && value <= MAX_VALUE;\r\n  }\r\n}\r\n\r\nInt.MAX_VALUE = MAX_VALUE;\r\nInt.MIN_VALUE = -MIN_VALUE;\r\n","import { XdrPrimitiveType } from './xdr-type';\r\nimport {\r\n  calculateBigIntBoundaries,\r\n  encodeBigIntFromBits,\r\n  sliceBigInt\r\n} from './bigint-encoder';\r\nimport { XdrNotImplementedDefinitionError, XdrWriterError } from './errors';\r\n\r\nexport class LargeInt extends XdrPrimitiveType {\r\n  /**\r\n   * @param {Array<Number|BigInt|String>} parts - Slices to encode\r\n   */\r\n  constructor(args) {\r\n    super();\r\n    this._value = encodeBigIntFromBits(args, this.size, this.unsigned);\r\n  }\r\n\r\n  /**\r\n   * Signed/unsigned representation\r\n   * @type {Boolean}\r\n   * @abstract\r\n   */\r\n  get unsigned() {\r\n    throw new XdrNotImplementedDefinitionError();\r\n  }\r\n\r\n  /**\r\n   * Size of the integer in bits\r\n   * @type {Number}\r\n   * @abstract\r\n   */\r\n  get size() {\r\n    throw new XdrNotImplementedDefinitionError();\r\n  }\r\n\r\n  /**\r\n   * Slice integer to parts with smaller bit size\r\n   * @param {32|64|128} sliceSize - Size of each part in bits\r\n   * @return {BigInt[]}\r\n   */\r\n  slice(sliceSize) {\r\n    return sliceBigInt(this._value, this.size, sliceSize);\r\n  }\r\n\r\n  toString() {\r\n    return this._value.toString();\r\n  }\r\n\r\n  toJSON() {\r\n    return { _value: this._value.toString() };\r\n  }\r\n\r\n  toBigInt() {\r\n    return BigInt(this._value);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static read(reader) {\r\n    const { size } = this.prototype;\r\n    if (size === 64) return new this(reader.readBigUInt64BE());\r\n    return new this(\r\n      ...Array.from({ length: size / 64 }, () =>\r\n        reader.readBigUInt64BE()\r\n      ).reverse()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static write(value, writer) {\r\n    if (value instanceof this) {\r\n      value = value._value;\r\n    } else if (\r\n      typeof value !== 'bigint' ||\r\n      value > this.MAX_VALUE ||\r\n      value < this.MIN_VALUE\r\n    )\r\n      throw new XdrWriterError(`${value} is not a ${this.name}`);\r\n\r\n    const { unsigned, size } = this.prototype;\r\n    if (size === 64) {\r\n      if (unsigned) {\r\n        writer.writeBigUInt64BE(value);\r\n      } else {\r\n        writer.writeBigInt64BE(value);\r\n      }\r\n    } else {\r\n      for (const part of sliceBigInt(value, size, 64).reverse()) {\r\n        if (unsigned) {\r\n          writer.writeBigUInt64BE(part);\r\n        } else {\r\n          writer.writeBigInt64BE(part);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static isValid(value) {\r\n    return typeof value === 'bigint' || value instanceof this;\r\n  }\r\n\r\n  /**\r\n   * Create instance from string\r\n   * @param {String} string - Numeric representation\r\n   * @return {LargeInt}\r\n   */\r\n  static fromString(string) {\r\n    return new this(string);\r\n  }\r\n\r\n  static MAX_VALUE = 0n;\r\n\r\n  static MIN_VALUE = 0n;\r\n\r\n  /**\r\n   * @internal\r\n   * @return {void}\r\n   */\r\n  static defineIntBoundaries() {\r\n    const [min, max] = calculateBigIntBoundaries(\r\n      this.prototype.size,\r\n      this.prototype.unsigned\r\n    );\r\n    this.MIN_VALUE = min;\r\n    this.MAX_VALUE = max;\r\n  }\r\n}\r\n","import { XdrCompositeType } from './xdr-type';\r\nimport { XdrWriterError } from './errors';\r\n\r\nexport class Opaque extends XdrCompositeType {\r\n  constructor(length) {\r\n    super();\r\n    this._length = length;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  read(reader) {\r\n    return reader.read(this._length);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  write(value, writer) {\r\n    const { length } = value;\r\n    if (length !== this._length)\r\n      throw new XdrWriterError(\r\n        `got ${value.length} bytes, expected ${this._length}`\r\n      );\r\n    writer.write(value, length);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  isValid(value) {\r\n    return Buffer.isBuffer(value) && value.length === this._length;\r\n  }\r\n}\r\n","import { Bool } from './bool';\r\nimport { XdrPrimitiveType } from './xdr-type';\r\n\r\nexport class Option extends XdrPrimitiveType {\r\n  constructor(childType) {\r\n    super();\r\n    this._childType = childType;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  read(reader) {\r\n    if (Bool.read(reader)) {\r\n      return this._childType.read(reader);\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  write(value, writer) {\r\n    const isPresent = value !== null && value !== undefined;\r\n\r\n    Bool.write(isPresent, writer);\r\n\r\n    if (isPresent) {\r\n      this._childType.write(value, writer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  isValid(value) {\r\n    if (value === null || value === undefined) {\r\n      return true;\r\n    }\r\n    return this._childType.isValid(value);\r\n  }\r\n}\r\n","import { XdrPrimitiveType } from './xdr-type';\r\nimport { XdrDefinitionError } from './errors';\r\n\r\nexport class Quadruple extends XdrPrimitiveType {\r\n  static read() {\r\n    throw new XdrDefinitionError('quadruple not supported');\r\n  }\r\n\r\n  static write() {\r\n    throw new XdrDefinitionError('quadruple not supported');\r\n  }\r\n\r\n  static isValid() {\r\n    return false;\r\n  }\r\n}\r\n","import { XdrPrimitiveType } from './xdr-type';\r\nimport { XdrDefinitionError } from './errors';\r\n\r\nexport class Reference extends XdrPrimitiveType {\r\n  /* jshint unused: false */\r\n  resolve() {\r\n    throw new XdrDefinitionError(\r\n      '\"resolve\" method should be implemented in the descendant class'\r\n    );\r\n  }\r\n}\r\n","/**\r\n * @internal\r\n */\r\nimport { XdrReaderError } from '../errors';\r\n\r\nexport class XdrReader {\r\n  /**\r\n   * @constructor\r\n   * @param {Buffer} source - Buffer containing serialized data\r\n   */\r\n  constructor(source) {\r\n    if (!Buffer.isBuffer(source)) {\r\n      if (\r\n        source instanceof Array ||\r\n        Array.isArray(source) ||\r\n        ArrayBuffer.isView(source)\r\n      ) {\r\n        source = Buffer.from(source);\r\n      } else {\r\n        throw new XdrReaderError(`source invalid: ${source}`);\r\n      }\r\n    }\r\n\r\n    this._buffer = source;\r\n    this._length = source.length;\r\n    this._index = 0;\r\n  }\r\n\r\n  /**\r\n   * @type {Buffer}\r\n   * @private\r\n   * @readonly\r\n   */\r\n  _buffer;\r\n  /**\r\n   * @type {Number}\r\n   * @private\r\n   * @readonly\r\n   */\r\n  _length;\r\n  /**\r\n   * @type {Number}\r\n   * @private\r\n   * @readonly\r\n   */\r\n  _index;\r\n\r\n  /**\r\n   * Check if the reader reached the end of the input buffer\r\n   * @return {Boolean}\r\n   */\r\n  get eof() {\r\n    return this._index === this._length;\r\n  }\r\n\r\n  /**\r\n   * Advance reader position, check padding and overflow\r\n   * @param {Number} size - Bytes to read\r\n   * @return {Number} Position to read from\r\n   * @private\r\n   */\r\n  advance(size) {\r\n    const from = this._index;\r\n    // advance cursor position\r\n    this._index += size;\r\n    // check buffer boundaries\r\n    if (this._length < this._index)\r\n      throw new XdrReaderError(\r\n        'attempt to read outside the boundary of the buffer'\r\n      );\r\n    // check that padding is correct for Opaque and String\r\n    const padding = 4 - (size % 4 || 4);\r\n    if (padding > 0) {\r\n      for (let i = 0; i < padding; i++)\r\n        if (this._buffer[this._index + i] !== 0)\r\n          // all bytes in the padding should be zeros\r\n          throw new XdrReaderError('invalid padding');\r\n      this._index += padding;\r\n    }\r\n    return from;\r\n  }\r\n\r\n  /**\r\n   * Reset reader position\r\n   * @return {void}\r\n   */\r\n  rewind() {\r\n    this._index = 0;\r\n  }\r\n\r\n  /**\r\n   * Read byte array from the buffer\r\n   * @param {Number} size - Bytes to read\r\n   * @return {Buffer} - Sliced portion of the underlying buffer\r\n   */\r\n  read(size) {\r\n    const from = this.advance(size);\r\n    return this._buffer.subarray(from, from + size);\r\n  }\r\n\r\n  /**\r\n   * Read i32 from buffer\r\n   * @return {Number}\r\n   */\r\n  readInt32BE() {\r\n    return this._buffer.readInt32BE(this.advance(4));\r\n  }\r\n\r\n  /**\r\n   * Read u32 from buffer\r\n   * @return {Number}\r\n   */\r\n  readUInt32BE() {\r\n    return this._buffer.readUInt32BE(this.advance(4));\r\n  }\r\n\r\n  /**\r\n   * Read i64 from buffer\r\n   * @return {BigInt}\r\n   */\r\n  readBigInt64BE() {\r\n    return this._buffer.readBigInt64BE(this.advance(8));\r\n  }\r\n\r\n  /**\r\n   * Read u64 from buffer\r\n   * @return {BigInt}\r\n   */\r\n  readBigUInt64BE() {\r\n    return this._buffer.readBigUInt64BE(this.advance(8));\r\n  }\r\n\r\n  /**\r\n   * Read float from buffer\r\n   * @return {Number}\r\n   */\r\n  readFloatBE() {\r\n    return this._buffer.readFloatBE(this.advance(4));\r\n  }\r\n\r\n  /**\r\n   * Read double from buffer\r\n   * @return {Number}\r\n   */\r\n  readDoubleBE() {\r\n    return this._buffer.readDoubleBE(this.advance(8));\r\n  }\r\n\r\n  /**\r\n   * Ensure that input buffer has been consumed in full, otherwise it's a type mismatch\r\n   * @return {void}\r\n   * @throws {XdrReaderError}\r\n   */\r\n  ensureInputConsumed() {\r\n    if (this._index !== this._length)\r\n      throw new XdrReaderError(\r\n        `invalid XDR contract typecast - source buffer not entirely consumed`\r\n      );\r\n  }\r\n}\r\n","const BUFFER_CHUNK = 8192; // 8 KB chunk size increment\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class XdrWriter {\r\n  /**\r\n   * @param {Buffer|Number} [buffer] - Optional destination buffer\r\n   */\r\n  constructor(buffer) {\r\n    if (typeof buffer === 'number') {\r\n      buffer = Buffer.allocUnsafe(buffer);\r\n    } else if (!(buffer instanceof Buffer)) {\r\n      buffer = Buffer.allocUnsafe(BUFFER_CHUNK);\r\n    }\r\n    this._buffer = buffer;\r\n    this._length = buffer.length;\r\n  }\r\n\r\n  /**\r\n   * @type {Buffer}\r\n   * @private\r\n   * @readonly\r\n   */\r\n  _buffer;\r\n  /**\r\n   * @type {Number}\r\n   * @private\r\n   * @readonly\r\n   */\r\n  _length;\r\n  /**\r\n   * @type {Number}\r\n   * @private\r\n   * @readonly\r\n   */\r\n  _index = 0;\r\n\r\n  /**\r\n   * Advance writer position, write padding if needed, auto-resize the buffer\r\n   * @param {Number} size - Bytes to write\r\n   * @return {Number} Position to read from\r\n   * @private\r\n   */\r\n  alloc(size) {\r\n    const from = this._index;\r\n    // advance cursor position\r\n    this._index += size;\r\n    // ensure sufficient buffer size\r\n    if (this._length < this._index) {\r\n      this.resize(this._index);\r\n    }\r\n    return from;\r\n  }\r\n\r\n  /**\r\n   * Increase size of the underlying buffer\r\n   * @param {Number} minRequiredSize - Minimum required buffer size\r\n   * @return {void}\r\n   * @private\r\n   */\r\n  resize(minRequiredSize) {\r\n    // calculate new length, align new buffer length by chunk size\r\n    const newLength = Math.ceil(minRequiredSize / BUFFER_CHUNK) * BUFFER_CHUNK;\r\n    // create new buffer and copy previous data\r\n    const newBuffer = Buffer.allocUnsafe(newLength);\r\n    this._buffer.copy(newBuffer, 0, 0, this._length);\r\n    // update references\r\n    this._buffer = newBuffer;\r\n    this._length = newLength;\r\n  }\r\n\r\n  /**\r\n   * Return XDR-serialized value\r\n   * @return {Buffer}\r\n   */\r\n  finalize() {\r\n    // clip underlying buffer to the actually written value\r\n    return this._buffer.subarray(0, this._index);\r\n  }\r\n\r\n  /**\r\n   * Return XDR-serialized value as byte array\r\n   * @return {Number[]}\r\n   */\r\n  toArray() {\r\n    return [...this.finalize()];\r\n  }\r\n\r\n  /**\r\n   * Write byte array from the buffer\r\n   * @param {Buffer|String} value - Bytes/string to write\r\n   * @param {Number} size - Size in bytes\r\n   * @return {XdrReader} - XdrReader wrapper on top of a subarray\r\n   */\r\n  write(value, size) {\r\n    if (typeof value === 'string') {\r\n      // serialize string directly to the output buffer\r\n      const offset = this.alloc(size);\r\n      this._buffer.write(value, offset, 'utf8');\r\n    } else {\r\n      // copy data to the output buffer\r\n      if (!(value instanceof Buffer)) {\r\n        value = Buffer.from(value);\r\n      }\r\n      const offset = this.alloc(size);\r\n      value.copy(this._buffer, offset, 0, size);\r\n    }\r\n\r\n    // add padding for 4-byte XDR alignment\r\n    const padding = 4 - (size % 4 || 4);\r\n    if (padding > 0) {\r\n      const offset = this.alloc(padding);\r\n      this._buffer.fill(0, offset, this._index);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Write i32 from buffer\r\n   * @param {Number} value - Value to serialize\r\n   * @return {void}\r\n   */\r\n  writeInt32BE(value) {\r\n    const offset = this.alloc(4);\r\n    this._buffer.writeInt32BE(value, offset);\r\n  }\r\n\r\n  /**\r\n   * Write u32 from buffer\r\n   * @param {Number} value - Value to serialize\r\n   * @return {void}\r\n   */\r\n  writeUInt32BE(value) {\r\n    const offset = this.alloc(4);\r\n    this._buffer.writeUInt32BE(value, offset);\r\n  }\r\n\r\n  /**\r\n   * Write i64 from buffer\r\n   * @param {BigInt} value - Value to serialize\r\n   * @return {void}\r\n   */\r\n  writeBigInt64BE(value) {\r\n    const offset = this.alloc(8);\r\n    this._buffer.writeBigInt64BE(value, offset);\r\n  }\r\n\r\n  /**\r\n   * Write u64 from buffer\r\n   * @param {BigInt} value - Value to serialize\r\n   * @return {void}\r\n   */\r\n  writeBigUInt64BE(value) {\r\n    const offset = this.alloc(8);\r\n    this._buffer.writeBigUInt64BE(value, offset);\r\n  }\r\n\r\n  /**\r\n   * Write float from buffer\r\n   * @param {Number} value - Value to serialize\r\n   * @return {void}\r\n   */\r\n  writeFloatBE(value) {\r\n    const offset = this.alloc(4);\r\n    this._buffer.writeFloatBE(value, offset);\r\n  }\r\n\r\n  /**\r\n   * Write double from buffer\r\n   * @param {Number} value - Value to serialize\r\n   * @return {void}\r\n   */\r\n  writeDoubleBE(value) {\r\n    const offset = this.alloc(8);\r\n    this._buffer.writeDoubleBE(value, offset);\r\n  }\r\n\r\n  static bufferChunkSize = BUFFER_CHUNK;\r\n}\r\n","import { UnsignedInt } from './unsigned-int';\r\nimport { XdrCompositeType } from './xdr-type';\r\nimport { XdrReaderError, XdrWriterError } from './errors';\r\n\r\nexport class String extends XdrCompositeType {\r\n  constructor(maxLength = UnsignedInt.MAX_VALUE) {\r\n    super();\r\n    this._maxLength = maxLength;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  read(reader) {\r\n    const size = UnsignedInt.read(reader);\r\n    if (size > this._maxLength)\r\n      throw new XdrReaderError(\r\n        `saw ${size} length String, max allowed is ${this._maxLength}`\r\n      );\r\n\r\n    return reader.read(size);\r\n  }\r\n\r\n  readString(reader) {\r\n    return this.read(reader).toString('utf8');\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  write(value, writer) {\r\n    // calculate string byte size before writing\r\n    const size =\r\n      typeof value === 'string'\r\n        ? Buffer.byteLength(value, 'utf8')\r\n        : value.length;\r\n    if (size > this._maxLength)\r\n      throw new XdrWriterError(\r\n        `got ${value.length} bytes, max allowed is ${this._maxLength}`\r\n      );\r\n    // write size info\r\n    UnsignedInt.write(size, writer);\r\n    writer.write(value, size);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  isValid(value) {\r\n    if (typeof value === 'string') {\r\n      return Buffer.byteLength(value, 'utf8') <= this._maxLength;\r\n    }\r\n    if (value instanceof Array || Buffer.isBuffer(value)) {\r\n      return value.length <= this._maxLength;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import { Reference } from './reference';\r\nimport { XdrPrimitiveType } from './xdr-type';\r\nimport { XdrWriterError } from './errors';\r\n\r\nexport class Struct extends XdrPrimitiveType {\r\n  constructor(attributes) {\r\n    super();\r\n    this._attributes = attributes || {};\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static read(reader) {\r\n    const attributes = {};\r\n    for (const [fieldName, type] of this._fields) {\r\n      attributes[fieldName] = type.read(reader);\r\n    }\r\n    return new this(attributes);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static write(value, writer) {\r\n    if (!(value instanceof this))\r\n      throw new XdrWriterError(`${value} is not a ${this.structName}`);\r\n\r\n    for (const [fieldName, type] of this._fields) {\r\n      const attribute = value._attributes[fieldName];\r\n      type.write(attribute, writer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static isValid(value) {\r\n    return value instanceof this;\r\n  }\r\n\r\n  static create(context, name, fields) {\r\n    const ChildStruct = class extends Struct {};\r\n\r\n    ChildStruct.structName = name;\r\n\r\n    context.results[name] = ChildStruct;\r\n\r\n    const mappedFields = new Array(fields.length);\r\n    for (let i = 0; i < fields.length; i++) {\r\n      const fieldDescriptor = fields[i];\r\n      const fieldName = fieldDescriptor[0];\r\n      let field = fieldDescriptor[1];\r\n      if (field instanceof Reference) {\r\n        field = field.resolve(context);\r\n      }\r\n      mappedFields[i] = [fieldName, field];\r\n      // create accessors\r\n      ChildStruct.prototype[fieldName] = createAccessorMethod(fieldName);\r\n    }\r\n\r\n    ChildStruct._fields = mappedFields;\r\n\r\n    return ChildStruct;\r\n  }\r\n}\r\n\r\nfunction createAccessorMethod(name) {\r\n  return function readOrWriteAttribute(value) {\r\n    if (value !== undefined) {\r\n      this._attributes[name] = value;\r\n    }\r\n    return this._attributes[name];\r\n  };\r\n}\r\n","export * from './int';\r\nexport * from './hyper';\r\nexport * from './unsigned-int';\r\nexport * from './unsigned-hyper';\r\nexport * from './large-int';\r\n\r\nexport * from './float';\r\nexport * from './double';\r\nexport * from './quadruple';\r\n\r\nexport * from './bool';\r\n\r\nexport * from './string';\r\n\r\nexport * from './opaque';\r\nexport * from './var-opaque';\r\n\r\nexport * from './array';\r\nexport * from './var-array';\r\n\r\nexport * from './option';\r\nexport * from './void';\r\n\r\nexport * from './enum';\r\nexport * from './struct';\r\nexport * from './union';\r\n","import { Void } from './void';\r\nimport { Reference } from './reference';\r\nimport { XdrCompositeType } from './xdr-type';\r\nimport { XdrWriterError } from './errors';\r\n\r\nexport class Union extends XdrCompositeType {\r\n  constructor(aSwitch, value) {\r\n    super();\r\n    this.set(aSwitch, value);\r\n  }\r\n\r\n  set(aSwitch, value) {\r\n    if (typeof aSwitch === 'string') {\r\n      aSwitch = this.constructor._switchOn.fromName(aSwitch);\r\n    }\r\n\r\n    this._switch = aSwitch;\r\n    const arm = this.constructor.armForSwitch(this._switch);\r\n    this._arm = arm;\r\n    this._armType = arm === Void ? Void : this.constructor._arms[arm];\r\n    this._value = value;\r\n  }\r\n\r\n  get(armName = this._arm) {\r\n    if (this._arm !== Void && this._arm !== armName)\r\n      throw new TypeError(`${armName} not set`);\r\n    return this._value;\r\n  }\r\n\r\n  switch() {\r\n    return this._switch;\r\n  }\r\n\r\n  arm() {\r\n    return this._arm;\r\n  }\r\n\r\n  armType() {\r\n    return this._armType;\r\n  }\r\n\r\n  value() {\r\n    return this._value;\r\n  }\r\n\r\n  static armForSwitch(aSwitch) {\r\n    const member = this._switches.get(aSwitch);\r\n    if (member !== undefined) {\r\n      return member;\r\n    }\r\n    if (this._defaultArm) {\r\n      return this._defaultArm;\r\n    }\r\n    throw new TypeError(`Bad union switch: ${aSwitch}`);\r\n  }\r\n\r\n  static armTypeForArm(arm) {\r\n    if (arm === Void) {\r\n      return Void;\r\n    }\r\n    return this._arms[arm];\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static read(reader) {\r\n    const aSwitch = this._switchOn.read(reader);\r\n    const arm = this.armForSwitch(aSwitch);\r\n    const armType = arm === Void ? Void : this._arms[arm];\r\n    let value;\r\n    if (armType !== undefined) {\r\n      value = armType.read(reader);\r\n    } else {\r\n      value = arm.read(reader);\r\n    }\r\n    return new this(aSwitch, value);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static write(value, writer) {\r\n    if (!(value instanceof this))\r\n      throw new XdrWriterError(`${value} is not a ${this.unionName}`);\r\n\r\n    this._switchOn.write(value.switch(), writer);\r\n    value.armType().write(value.value(), writer);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static isValid(value) {\r\n    return value instanceof this;\r\n  }\r\n\r\n  static create(context, name, config) {\r\n    const ChildUnion = class extends Union {};\r\n\r\n    ChildUnion.unionName = name;\r\n    context.results[name] = ChildUnion;\r\n\r\n    if (config.switchOn instanceof Reference) {\r\n      ChildUnion._switchOn = config.switchOn.resolve(context);\r\n    } else {\r\n      ChildUnion._switchOn = config.switchOn;\r\n    }\r\n\r\n    ChildUnion._switches = new Map();\r\n    ChildUnion._arms = {};\r\n\r\n    // resolve default arm\r\n    let defaultArm = config.defaultArm;\r\n    if (defaultArm instanceof Reference) {\r\n      defaultArm = defaultArm.resolve(context);\r\n    }\r\n\r\n    ChildUnion._defaultArm = defaultArm;\r\n\r\n    for (const [aSwitch, armName] of config.switches) {\r\n      const key =\r\n        typeof aSwitch === 'string'\r\n          ? ChildUnion._switchOn.fromName(aSwitch)\r\n          : aSwitch;\r\n\r\n      ChildUnion._switches.set(key, armName);\r\n    }\r\n\r\n    // add enum-based helpers\r\n    // NOTE: we don't have good notation for \"is a subclass of XDR.Enum\",\r\n    //  and so we use the following check (does _switchOn have a `values`\r\n    //  attribute) to approximate the intent.\r\n    if (ChildUnion._switchOn.values !== undefined) {\r\n      for (const aSwitch of ChildUnion._switchOn.values()) {\r\n        // Add enum-based constructors\r\n        ChildUnion[aSwitch.name] = function ctr(value) {\r\n          return new ChildUnion(aSwitch, value);\r\n        };\r\n\r\n        // Add enum-based \"set\" helpers\r\n        ChildUnion.prototype[aSwitch.name] = function set(value) {\r\n          return this.set(aSwitch, value);\r\n        };\r\n      }\r\n    }\r\n\r\n    if (config.arms) {\r\n      for (const [armsName, value] of Object.entries(config.arms)) {\r\n        ChildUnion._arms[armsName] =\r\n          value instanceof Reference ? value.resolve(context) : value;\r\n        // Add arm accessor helpers\r\n        if (value !== Void) {\r\n          ChildUnion.prototype[armsName] = function get() {\r\n            return this.get(armsName);\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    return ChildUnion;\r\n  }\r\n}\r\n","import { LargeInt } from './large-int';\r\n\r\nexport class UnsignedHyper extends LargeInt {\r\n  /**\r\n   * @param {Array<Number|BigInt|String>} parts - Slices to encode\r\n   */\r\n  constructor(...args) {\r\n    super(args);\r\n  }\r\n\r\n  get low() {\r\n    return Number(this._value & 0xffffffffn) << 0;\r\n  }\r\n\r\n  get high() {\r\n    return Number(this._value >> 32n) >> 0;\r\n  }\r\n\r\n  get size() {\r\n    return 64;\r\n  }\r\n\r\n  get unsigned() {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Create UnsignedHyper instance from two [high][low] i32 values\r\n   * @param {Number} low - Low part of u64 number\r\n   * @param {Number} high - High part of u64 number\r\n   * @return {UnsignedHyper}\r\n   */\r\n  static fromBits(low, high) {\r\n    return new this(low, high);\r\n  }\r\n}\r\n\r\nUnsignedHyper.defineIntBoundaries();\r\n","import { XdrPrimitiveType } from './xdr-type';\r\nimport { XdrWriterError } from './errors';\r\n\r\nconst MAX_VALUE = 4294967295;\r\nconst MIN_VALUE = 0;\r\n\r\nexport class UnsignedInt extends XdrPrimitiveType {\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static read(reader) {\r\n    return reader.readUInt32BE();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static write(value, writer) {\r\n    if (\r\n      typeof value !== 'number' ||\r\n      !(value >= MIN_VALUE && value <= MAX_VALUE) ||\r\n      value % 1 !== 0\r\n    )\r\n      throw new XdrWriterError('invalid u32 value');\r\n\r\n    writer.writeUInt32BE(value);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  static isValid(value) {\r\n    if (typeof value !== 'number' || value % 1 !== 0) {\r\n      return false;\r\n    }\r\n\r\n    return value >= MIN_VALUE && value <= MAX_VALUE;\r\n  }\r\n}\r\n\r\nUnsignedInt.MAX_VALUE = MAX_VALUE;\r\nUnsignedInt.MIN_VALUE = MIN_VALUE;\r\n","import { UnsignedInt } from './unsigned-int';\r\nimport { XdrCompositeType } from './xdr-type';\r\nimport { XdrReaderError, XdrWriterError } from './errors';\r\n\r\nexport class VarArray extends XdrCompositeType {\r\n  constructor(childType, maxLength = UnsignedInt.MAX_VALUE) {\r\n    super();\r\n    this._childType = childType;\r\n    this._maxLength = maxLength;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  read(reader) {\r\n    const length = UnsignedInt.read(reader);\r\n    if (length > this._maxLength)\r\n      throw new XdrReaderError(\r\n        `saw ${length} length VarArray, max allowed is ${this._maxLength}`\r\n      );\r\n\r\n    const result = new Array(length);\r\n    for (let i = 0; i < length; i++) {\r\n      result[i] = this._childType.read(reader);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  write(value, writer) {\r\n    if (!(value instanceof Array))\r\n      throw new XdrWriterError(`value is not array`);\r\n\r\n    if (value.length > this._maxLength)\r\n      throw new XdrWriterError(\r\n        `got array of size ${value.length}, max allowed is ${this._maxLength}`\r\n      );\r\n\r\n    UnsignedInt.write(value.length, writer);\r\n    for (const child of value) {\r\n      this._childType.write(child, writer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  isValid(value) {\r\n    if (!(value instanceof Array) || value.length > this._maxLength) {\r\n      return false;\r\n    }\r\n    for (const child of value) {\r\n      if (!this._childType.isValid(child)) return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { UnsignedInt } from './unsigned-int';\r\nimport { XdrCompositeType } from './xdr-type';\r\nimport { XdrReaderError, XdrWriterError } from './errors';\r\n\r\nexport class VarOpaque extends XdrCompositeType {\r\n  constructor(maxLength = UnsignedInt.MAX_VALUE) {\r\n    super();\r\n    this._maxLength = maxLength;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  read(reader) {\r\n    const size = UnsignedInt.read(reader);\r\n    if (size > this._maxLength)\r\n      throw new XdrReaderError(\r\n        `saw ${size} length VarOpaque, max allowed is ${this._maxLength}`\r\n      );\r\n    return reader.read(size);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  write(value, writer) {\r\n    const { length } = value;\r\n    if (value.length > this._maxLength)\r\n      throw new XdrWriterError(\r\n        `got ${value.length} bytes, max allowed is ${this._maxLength}`\r\n      );\r\n    // write size info\r\n    UnsignedInt.write(length, writer);\r\n    writer.write(value, length);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  isValid(value) {\r\n    return Buffer.isBuffer(value) && value.length <= this._maxLength;\r\n  }\r\n}\r\n","import { XdrPrimitiveType } from './xdr-type';\r\nimport { XdrWriterError } from './errors';\r\n\r\nexport class Void extends XdrPrimitiveType {\r\n  /* jshint unused: false */\r\n\r\n  static read() {\r\n    return undefined;\r\n  }\r\n\r\n  static write(value) {\r\n    if (value !== undefined)\r\n      throw new XdrWriterError('trying to write value to a void slot');\r\n  }\r\n\r\n  static isValid(value) {\r\n    return value === undefined;\r\n  }\r\n}\r\n","import { XdrReader } from './serialization/xdr-reader';\r\nimport { XdrWriter } from './serialization/xdr-writer';\r\nimport { XdrNotImplementedDefinitionError } from './errors';\r\n\r\nclass XdrType {\r\n  /**\r\n   * Encode value to XDR format\r\n   * @param {XdrEncodingFormat} [format] - Encoding format (one of \"raw\", \"hex\", \"base64\")\r\n   * @return {String|Buffer}\r\n   */\r\n  toXDR(format = 'raw') {\r\n    if (!this.write) return this.constructor.toXDR(this, format);\r\n\r\n    const writer = new XdrWriter();\r\n    this.write(this, writer);\r\n    return encodeResult(writer.finalize(), format);\r\n  }\r\n\r\n  /**\r\n   * Decode XDR-encoded value\r\n   * @param {Buffer|String} input - XDR-encoded input data\r\n   * @param {XdrEncodingFormat} [format] - Encoding format (one of \"raw\", \"hex\", \"base64\")\r\n   * @return {this}\r\n   */\r\n  fromXDR(input, format = 'raw') {\r\n    if (!this.read) return this.constructor.fromXDR(input, format);\r\n\r\n    const reader = new XdrReader(decodeInput(input, format));\r\n    const result = this.read(reader);\r\n    reader.ensureInputConsumed();\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Check whether input contains a valid XDR-encoded value\r\n   * @param {Buffer|String} input - XDR-encoded input data\r\n   * @param {XdrEncodingFormat} [format] - Encoding format (one of \"raw\", \"hex\", \"base64\")\r\n   * @return {Boolean}\r\n   */\r\n  validateXDR(input, format = 'raw') {\r\n    try {\r\n      this.fromXDR(input, format);\r\n      return true;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Encode value to XDR format\r\n   * @param {this} value - Value to serialize\r\n   * @param {XdrEncodingFormat} [format] - Encoding format (one of \"raw\", \"hex\", \"base64\")\r\n   * @return {Buffer}\r\n   */\r\n  static toXDR(value, format = 'raw') {\r\n    const writer = new XdrWriter();\r\n    this.write(value, writer);\r\n    return encodeResult(writer.finalize(), format);\r\n  }\r\n\r\n  /**\r\n   * Decode XDR-encoded value\r\n   * @param {Buffer|String} input - XDR-encoded input data\r\n   * @param {XdrEncodingFormat} [format] - Encoding format (one of \"raw\", \"hex\", \"base64\")\r\n   * @return {this}\r\n   */\r\n  static fromXDR(input, format = 'raw') {\r\n    const reader = new XdrReader(decodeInput(input, format));\r\n    const result = this.read(reader);\r\n    reader.ensureInputConsumed();\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Check whether input contains a valid XDR-encoded value\r\n   * @param {Buffer|String} input - XDR-encoded input data\r\n   * @param {XdrEncodingFormat} [format] - Encoding format (one of \"raw\", \"hex\", \"base64\")\r\n   * @return {Boolean}\r\n   */\r\n  static validateXDR(input, format = 'raw') {\r\n    try {\r\n      this.fromXDR(input, format);\r\n      return true;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport class XdrPrimitiveType extends XdrType {\r\n  /**\r\n   * Read value from the XDR-serialized input\r\n   * @param {XdrReader} reader - XdrReader instance\r\n   * @return {this}\r\n   * @abstract\r\n   */\r\n  // eslint-disable-next-line no-unused-vars\r\n  static read(reader) {\r\n    throw new XdrNotImplementedDefinitionError();\r\n  }\r\n\r\n  /**\r\n   * Write XDR value to the buffer\r\n   * @param {this} value - Value to write\r\n   * @param {XdrWriter} writer - XdrWriter instance\r\n   * @return {void}\r\n   * @abstract\r\n   */\r\n  // eslint-disable-next-line no-unused-vars\r\n  static write(value, writer) {\r\n    throw new XdrNotImplementedDefinitionError();\r\n  }\r\n\r\n  /**\r\n   * Check whether XDR primitive value is valid\r\n   * @param {this} value - Value to check\r\n   * @return {Boolean}\r\n   * @abstract\r\n   */\r\n  // eslint-disable-next-line no-unused-vars\r\n  static isValid(value) {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport class XdrCompositeType extends XdrType {\r\n  // Every descendant should implement two methods: read(reader) and write(value, writer)\r\n\r\n  /**\r\n   * Check whether XDR primitive value is valid\r\n   * @param {this} value - Value to check\r\n   * @return {Boolean}\r\n   * @abstract\r\n   */\r\n  // eslint-disable-next-line no-unused-vars\r\n  isValid(value) {\r\n    return false;\r\n  }\r\n}\r\n\r\nclass InvalidXdrEncodingFormatError extends TypeError {\r\n  constructor(format) {\r\n    super(`Invalid format ${format}, must be one of \"raw\", \"hex\", \"base64\"`);\r\n  }\r\n}\r\n\r\nfunction encodeResult(buffer, format) {\r\n  switch (format) {\r\n    case 'raw':\r\n      return buffer;\r\n    case 'hex':\r\n      return buffer.toString('hex');\r\n    case 'base64':\r\n      return buffer.toString('base64');\r\n    default:\r\n      throw new InvalidXdrEncodingFormatError(format);\r\n  }\r\n}\r\n\r\nfunction decodeInput(input, format) {\r\n  switch (format) {\r\n    case 'raw':\r\n      return input;\r\n    case 'hex':\r\n      return Buffer.from(input, 'hex');\r\n    case 'base64':\r\n      return Buffer.from(input, 'base64');\r\n    default:\r\n      throw new InvalidXdrEncodingFormatError(format);\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {'raw'|'hex'|'base64'} XdrEncodingFormat\r\n */\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/browser.js\");\n",""],"names":["XdrCompositeType","XdrWriterError","Array","constructor","childType","length","_childType","_length","read","reader","result","global","i","write","value","writer","child","isValid","encodeBigIntFromBits","parts","size","unsigned","total","sliceSize","RangeError","BigInt","valueOf","e","TypeError","asUintN","asIntN","min","max","calculateBigIntBoundaries","formatIntName","sliceBigInt","iSize","shift","precision","boundary","Int","XdrPrimitiveType","XdrReaderError","Bool","intVal","exports","require","module","XDRTypes","Reference","XdrDefinitionError","SimpleReference","name","resolve","context","defn","definitions","ArrayReference","childReference","variable","resolvedChild","VarArray","OptionReference","Option","SizedReference","sizedType","Definition","cfg","config","results","createTypedef","typeName","createConst","TypeBuilder","destination","_destination","_definitions","enum","members","Enum","create","define","struct","Struct","union","Union","typedef","const","void","Void","bool","int","hyper","Hyper","uint","UnsignedInt","uhyper","UnsignedHyper","float","Float","double","Double","quadruple","Quadruple","string","String","opaque","Opaque","varOpaque","VarOpaque","array","varArray","maxLength","option","definition","undefined","lookup","Object","values","fn","types","builder","readDoubleBE","writeDoubleBE","res","_byValue","enumName","_members","fromName","fromValue","ChildEnum","key","entries","inst","message","XdrNotImplementedDefinitionError","readFloatBE","writeFloatBE","LargeInt","args","low","Number","_value","high","fromBits","defineIntBoundaries","XdrReader","XdrWriter","MAX_VALUE","MIN_VALUE","readInt32BE","writeInt32BE","slice","toString","toJSON","toBigInt","prototype","readBigUInt64BE","from","reverse","writeBigUInt64BE","writeBigInt64BE","part","fromString","Buffer","isBuffer","isPresent","source","isArray","ArrayBuffer","isView","_buffer","_index","eof","advance","padding","rewind","subarray","readUInt32BE","readBigInt64BE","ensureInputConsumed","BUFFER_CHUNK","buffer","allocUnsafe","alloc","resize","minRequiredSize","newLength","Math","ceil","newBuffer","copy","finalize","toArray","offset","fill","writeUInt32BE","bufferChunkSize","_maxLength","readString","byteLength","attributes","_attributes","fieldName","type","_fields","structName","attribute","fields","ChildStruct","mappedFields","fieldDescriptor","field","createAccessorMethod","readOrWriteAttribute","aSwitch","set","_switchOn","_switch","arm","armForSwitch","_arm","_armType","_arms","get","armName","switch","armType","member","_switches","_defaultArm","armTypeForArm","unionName","ChildUnion","switchOn","Map","defaultArm","switches","ctr","arms","armsName","XdrType","toXDR","format","encodeResult","fromXDR","input","decodeInput","validateXDR","InvalidXdrEncodingFormatError"],"sourceRoot":""}